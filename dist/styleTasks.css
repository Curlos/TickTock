.listTypeTitle, .taskList {
  padding: 10px;
}

.listDateInfo {
  margin-top: 40px;
}

.listDateInfo, .taskList, .displayFormButton {
  width: 50%;
}

.taskItem {
  padding: 20px 0px 20px 0px;
  border-bottom: 1px solid lightgray;
}

.taskItem:hover {
  cursor: pointer;
}

.taskItemRightHalf {
  float: right;
  display: none;
}

.taskItemRightHalf i {
  margin: 2px;
  padding: 5px;
  color: gray;
}

.taskItem:hover .taskItemRightHalf {
  display: block;
}

.taskItemRightHalf i:hover {
  background-color: lightgray;
  border-radius: 4px;
}





























/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 50%;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 15px;
  width: 15px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: gray;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 5px;
  top: 3px;
  width: 3px;
  height: 5px;
  border: solid white;
  border-width: 0 2px 2px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.taskNameName {
  margin-left: 30px;
}

input:checked + span {
  color: gray;
  text-decoration: line-through;
}